stages:
  - prepare
  - build
  - deploy

html:
  variables:
    GIT_SUBMODULE_STRATEGY: recursive
  image: node:latest
  stage: prepare
  tags:
    - docker
  script:
    - cd angular
    - if [ -z ${PULL_LATEST_ANGULAR_SUBMODULE+x} ]; then echo 'Already pulled fixed version of angular submodule.'; else git pull origin master; fi
    - npm install
    - npx ng build --prod --output-path ../html
  artifacts:
    paths:
       - html/
  only:
    - master

build:
  image: electronuserland/builder
  stage: build
  dependencies:
    - html
  tags:
    - docker
  script:
    - npm install
    - npm run build
    - ls -la dist/
    - rm -rf dist/*unpacked
    - cd dist
    - wget https://github.com/ranau-artmosphere/electron/releases/download/v0.0.16/artmosphere_setup_0.0.16.exe
    - wget https://github.com/ranau-artmosphere/electron/releases/download/v0.0.16/artmosphere_setup_0.0.16.exe.blockmap
    - wget https://github.com/ranau-artmosphere/electron/releases/download/v0.0.16/latest.yml
    - cd ..
  artifacts:
    paths:
       - dist/
  only:
    - master

pages:
  stage: deploy
  image: node:latest
  script:
    - sed -i "s/version/$(node version.js)/" ./dist/index.html
    - mv dist public
  dependencies:
    - build
  artifacts:
    paths:
      - public
  only:
    - master
